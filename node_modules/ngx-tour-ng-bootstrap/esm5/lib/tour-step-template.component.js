/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { TourHotkeyListenerComponent } from 'ngx-tour-core';
import { TourStepTemplateService } from './tour-step-template.service';
import { Component, TemplateRef, ViewChild, ViewEncapsulation, Input, ContentChild } from '@angular/core';
import { NgbTourService } from './ng-bootstrap-tour.service';
var TourStepTemplateComponent = /** @class */ (function (_super) {
    tslib_1.__extends(TourStepTemplateComponent, _super);
    function TourStepTemplateComponent(tourStepTemplateService, tourService) {
        var _this = _super.call(this, tourService) || this;
        _this.tourStepTemplateService = tourStepTemplateService;
        _this.tourService = tourService;
        return _this;
    }
    /**
     * @return {?}
     */
    TourStepTemplateComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        this.tourStepTemplateService.template =
            this.stepTemplate ||
                this.stepTemplateContent ||
                this.defaultTourStepTemplate;
    };
    TourStepTemplateComponent.decorators = [
        { type: Component, args: [{
                    encapsulation: ViewEncapsulation.None,
                    selector: 'tour-step-template',
                    template: "\n    <ng-template #tourStep let-step=\"step\">\n      <p class=\"tour-step-content\">{{ step?.content }}</p>\n      <div class=\"tour-step-navigation\">\n        <button\n          *ngIf=\"tourService.hasPrev(step)\"\n          class=\"btn btn-sm btn-default\"\n          (click)=\"tourService.prev()\"\n        >\n          \u00AB {{ step?.prevBtnTitle }}\n        </button>\n        <button\n          *ngIf=\"tourService.hasNext(step)\"\n          class=\"btn btn-sm btn-default\"\n          (click)=\"tourService.next()\"\n        >\n          {{ step?.nextBtnTitle }} \u00BB\n        </button>\n        <button class=\"btn btn-sm btn-default\" (click)=\"tourService.end()\">\n          {{ step?.endBtnTitle }}\n        </button>\n      </div>\n    </ng-template>\n  "
                }] }
    ];
    /** @nocollapse */
    TourStepTemplateComponent.ctorParameters = function () { return [
        { type: TourStepTemplateService },
        { type: NgbTourService }
    ]; };
    TourStepTemplateComponent.propDecorators = {
        defaultTourStepTemplate: [{ type: ViewChild, args: ['tourStep', { read: TemplateRef, static: true },] }],
        stepTemplate: [{ type: Input }],
        stepTemplateContent: [{ type: ContentChild, args: [TemplateRef, { static: false },] }]
    };
    return TourStepTemplateComponent;
}(TourHotkeyListenerComponent));
export { TourStepTemplateComponent };
if (false) {
    /** @type {?} */
    TourStepTemplateComponent.prototype.defaultTourStepTemplate;
    /** @type {?} */
    TourStepTemplateComponent.prototype.stepTemplate;
    /** @type {?} */
    TourStepTemplateComponent.prototype.stepTemplateContent;
    /**
     * @type {?}
     * @private
     */
    TourStepTemplateComponent.prototype.tourStepTemplateService;
    /** @type {?} */
    TourStepTemplateComponent.prototype.tourService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG91ci1zdGVwLXRlbXBsYXRlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC10b3VyLW5nLWJvb3RzdHJhcC8iLCJzb3VyY2VzIjpbImxpYi90b3VyLXN0ZXAtdGVtcGxhdGUuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsT0FBTyxFQUFFLDJCQUEyQixFQUFlLE1BQU0sZUFBZSxDQUFDO0FBQ3pFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3ZFLE9BQU8sRUFDTCxTQUFTLEVBQ1QsV0FBVyxFQUNYLFNBQVMsRUFFVCxpQkFBaUIsRUFDakIsS0FBSyxFQUNMLFlBQVksRUFDYixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFFN0Q7SUE0QitDLHFEQUEyQjtJQVd4RSxtQ0FDVSx1QkFBZ0QsRUFDakQsV0FBMkI7UUFGcEMsWUFJRSxrQkFBTSxXQUFXLENBQUMsU0FDbkI7UUFKUyw2QkFBdUIsR0FBdkIsdUJBQXVCLENBQXlCO1FBQ2pELGlCQUFXLEdBQVgsV0FBVyxDQUFnQjs7SUFHcEMsQ0FBQzs7OztJQUVNLHNEQUFrQjs7O0lBQXpCO1FBQ0UsSUFBSSxDQUFDLHVCQUF1QixDQUFDLFFBQVE7WUFDbkMsSUFBSSxDQUFDLFlBQVk7Z0JBQ2pCLElBQUksQ0FBQyxtQkFBbUI7Z0JBQ3hCLElBQUksQ0FBQyx1QkFBdUIsQ0FBQztJQUNqQyxDQUFDOztnQkFuREYsU0FBUyxTQUFDO29CQUNULGFBQWEsRUFBRSxpQkFBaUIsQ0FBQyxJQUFJO29CQUNyQyxRQUFRLEVBQUUsb0JBQW9CO29CQUM5QixRQUFRLEVBQUUsc3dCQXVCVDtpQkFDRjs7OztnQkF2Q1EsdUJBQXVCO2dCQVV2QixjQUFjOzs7MENBZ0NwQixTQUFTLFNBQUMsVUFBVSxFQUFFLEVBQUUsSUFBSSxFQUFFLFdBQVcsRUFBRSxNQUFNLEVBQUUsSUFBSSxFQUFFOytCQUd6RCxLQUFLO3NDQUdMLFlBQVksU0FBQyxXQUFXLEVBQUUsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFOztJQWdCOUMsZ0NBQUM7Q0FBQSxBQXBERCxDQTRCK0MsMkJBQTJCLEdBd0J6RTtTQXhCWSx5QkFBeUI7OztJQUVwQyw0REFDaUQ7O0lBRWpELGlEQUN3RDs7SUFFeEQsd0RBQytEOzs7OztJQUc3RCw0REFBd0Q7O0lBQ3hELGdEQUFrQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRvdXJIb3RrZXlMaXN0ZW5lckNvbXBvbmVudCwgSVN0ZXBPcHRpb24gfSBmcm9tICduZ3gtdG91ci1jb3JlJztcbmltcG9ydCB7IFRvdXJTdGVwVGVtcGxhdGVTZXJ2aWNlIH0gZnJvbSAnLi90b3VyLXN0ZXAtdGVtcGxhdGUuc2VydmljZSc7XG5pbXBvcnQge1xuICBDb21wb25lbnQsXG4gIFRlbXBsYXRlUmVmLFxuICBWaWV3Q2hpbGQsXG4gIEFmdGVyQ29udGVudEluaXQsXG4gIFZpZXdFbmNhcHN1bGF0aW9uLFxuICBJbnB1dCxcbiAgQ29udGVudENoaWxkXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgTmdiVG91clNlcnZpY2UgfSBmcm9tICcuL25nLWJvb3RzdHJhcC10b3VyLnNlcnZpY2UnO1xuXG5AQ29tcG9uZW50KHtcbiAgZW5jYXBzdWxhdGlvbjogVmlld0VuY2Fwc3VsYXRpb24uTm9uZSxcbiAgc2VsZWN0b3I6ICd0b3VyLXN0ZXAtdGVtcGxhdGUnLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxuZy10ZW1wbGF0ZSAjdG91clN0ZXAgbGV0LXN0ZXA9XCJzdGVwXCI+XG4gICAgICA8cCBjbGFzcz1cInRvdXItc3RlcC1jb250ZW50XCI+e3sgc3RlcD8uY29udGVudCB9fTwvcD5cbiAgICAgIDxkaXYgY2xhc3M9XCJ0b3VyLXN0ZXAtbmF2aWdhdGlvblwiPlxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgKm5nSWY9XCJ0b3VyU2VydmljZS5oYXNQcmV2KHN0ZXApXCJcbiAgICAgICAgICBjbGFzcz1cImJ0biBidG4tc20gYnRuLWRlZmF1bHRcIlxuICAgICAgICAgIChjbGljayk9XCJ0b3VyU2VydmljZS5wcmV2KClcIlxuICAgICAgICA+XG4gICAgICAgICAgwqsge3sgc3RlcD8ucHJldkJ0blRpdGxlIH19XG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8YnV0dG9uXG4gICAgICAgICAgKm5nSWY9XCJ0b3VyU2VydmljZS5oYXNOZXh0KHN0ZXApXCJcbiAgICAgICAgICBjbGFzcz1cImJ0biBidG4tc20gYnRuLWRlZmF1bHRcIlxuICAgICAgICAgIChjbGljayk9XCJ0b3VyU2VydmljZS5uZXh0KClcIlxuICAgICAgICA+XG4gICAgICAgICAge3sgc3RlcD8ubmV4dEJ0blRpdGxlIH19IMK7XG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIGJ0bi1zbSBidG4tZGVmYXVsdFwiIChjbGljayk9XCJ0b3VyU2VydmljZS5lbmQoKVwiPlxuICAgICAgICAgIHt7IHN0ZXA/LmVuZEJ0blRpdGxlIH19XG4gICAgICAgIDwvYnV0dG9uPlxuICAgICAgPC9kaXY+XG4gICAgPC9uZy10ZW1wbGF0ZT5cbiAgYFxufSlcbmV4cG9ydCBjbGFzcyBUb3VyU3RlcFRlbXBsYXRlQ29tcG9uZW50IGV4dGVuZHMgVG91ckhvdGtleUxpc3RlbmVyQ29tcG9uZW50XG4gIGltcGxlbWVudHMgQWZ0ZXJDb250ZW50SW5pdCB7XG4gIEBWaWV3Q2hpbGQoJ3RvdXJTdGVwJywgeyByZWFkOiBUZW1wbGF0ZVJlZiwgc3RhdGljOiB0cnVlIH0pXG4gIHB1YmxpYyBkZWZhdWx0VG91clN0ZXBUZW1wbGF0ZTogVGVtcGxhdGVSZWY8YW55PjtcblxuICBASW5wdXQoKVxuICBwdWJsaWMgc3RlcFRlbXBsYXRlOiBUZW1wbGF0ZVJlZjx7IHN0ZXA6IElTdGVwT3B0aW9uIH0+O1xuXG4gIEBDb250ZW50Q2hpbGQoVGVtcGxhdGVSZWYsIHsgc3RhdGljOiBmYWxzZSB9KVxuICBwdWJsaWMgc3RlcFRlbXBsYXRlQ29udGVudDogVGVtcGxhdGVSZWY8eyBzdGVwOiBJU3RlcE9wdGlvbiB9PjtcblxuICBjb25zdHJ1Y3RvcihcbiAgICBwcml2YXRlIHRvdXJTdGVwVGVtcGxhdGVTZXJ2aWNlOiBUb3VyU3RlcFRlbXBsYXRlU2VydmljZSxcbiAgICBwdWJsaWMgdG91clNlcnZpY2U6IE5nYlRvdXJTZXJ2aWNlXG4gICkge1xuICAgIHN1cGVyKHRvdXJTZXJ2aWNlKTtcbiAgfVxuXG4gIHB1YmxpYyBuZ0FmdGVyQ29udGVudEluaXQoKTogdm9pZCB7XG4gICAgdGhpcy50b3VyU3RlcFRlbXBsYXRlU2VydmljZS50ZW1wbGF0ZSA9XG4gICAgICB0aGlzLnN0ZXBUZW1wbGF0ZSB8fFxuICAgICAgdGhpcy5zdGVwVGVtcGxhdGVDb250ZW50IHx8XG4gICAgICB0aGlzLmRlZmF1bHRUb3VyU3RlcFRlbXBsYXRlO1xuICB9XG59XG4iXX0=